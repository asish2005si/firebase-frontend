{
  "entities": {
    "ContactRequest": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContactRequest",
      "type": "object",
      "description": "Represents a contact request submitted by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the contact request."
        },
        "name": {
          "type": "string",
          "description": "Name of the person submitting the request."
        },
        "email": {
          "type": "string",
          "description": "Email address of the person submitting the request.",
          "format": "email"
        },
        "message": {
          "type": "string",
          "description": "The message content of the contact request."
        },
        "submissionDate": {
          "type": "string",
          "description": "The date and time when the contact request was submitted.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "message",
        "submissionDate"
      ]
    },
    "PersonalizedOffer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PersonalizedOffer",
      "type": "object",
      "description": "Represents a personalized banking offer generated by the AI.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the personalized offer."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N PersonalizedOffer)"
        },
        "offerType": {
          "type": "string",
          "description": "The type of the offer (e.g., loan, investment)."
        },
        "offerDetails": {
          "type": "string",
          "description": "Detailed information about the offer."
        },
        "expiryDate": {
          "type": "string",
          "description": "The date when the offer expires.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "offerType",
        "offerDetails",
        "expiryDate"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Smart Bank system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "accountType": {
          "type": "string",
          "description": "The type of account the user has (e.g., savings, checking)."
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "accountType"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Path-based ownership for user-specific data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/offers/{offerId}",
        "definition": {
          "entityName": "PersonalizedOffer",
          "schema": {
            "$ref": "#/backend/entities/PersonalizedOffer"
          },
          "description": "Stores personalized offers for each user. Path-based ownership ensures only the user can access their offers.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "offerId",
              "description": "The unique identifier for the personalized offer."
            }
          ]
        }
      },
      {
        "path": "/contact_requests/{contactRequestId}",
        "definition": {
          "entityName": "ContactRequest",
          "schema": {
            "$ref": "#/backend/entities/ContactRequest"
          },
          "description": "Stores contact requests submitted by users. Open access for creating requests. Access control managed via backend.",
          "params": [
            {
              "name": "contactRequestId",
              "description": "The unique identifier for the contact request."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure and scalable backend for the Smart Bank application, focusing on personalized offers and contact requests. The structure prioritizes authorization independence by avoiding hierarchical `get()` calls in security rules. It also ensures clear intent by segregating data based on access requirements and uses consistent access modeling. Personalized offers are stored under the user's document (`/users/{userId}/offers/{offerId}`), leveraging path-based ownership. Contact requests are stored in a separate collection (`/contact_requests`) which provides easy list operation and different authorization strategy to protect the personal information. This segregation supports secure list operations (QAPs) and maintains data integrity regarding ownership."
  }
}