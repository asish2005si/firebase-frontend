
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/write their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;
    }

    // Admins can read all applications. Users cannot read/write them directly.
    match /applications/{applicationId} {
        allow read, write: if isAdmin();
        allow create: if request.auth != null;
    }
    
    // Admins can read all loan applications. Users cannot read/write them directly.
    match /loan-applications/{loanId} {
        allow read, write: if isAdmin();
        allow create: if request.auth != null;
    }

    // Users can read transactions where they are the owner. Admins can read all transactions.
    // Writes are restricted to prevent client-side tampering.
    match /transactions/{transactionId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.accountNumber == resource.data.account_no || isAdmin();
      allow create: if request.auth.uid == request.resource.data.performed_by;
      allow update, delete: if false;
    }
    
    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
